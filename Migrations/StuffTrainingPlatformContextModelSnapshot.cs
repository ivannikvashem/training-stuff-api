// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using training_stuff_api.Models;

namespace training_stuff_api.Migrations
{
    [DbContext(typeof(StuffTrainingPlatformContext))]
    partial class StuffTrainingPlatformContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10");

            modelBuilder.Entity("training_stuff_api.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("training_stuff_api.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Chapter")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EditedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LessonText")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Chapter");

                    b.HasIndex("EditedBy");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("training_stuff_api.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("training_stuff_api.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("training_stuff_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("training_stuff_api.Models.Chapter", b =>
                {
                    b.HasOne("training_stuff_api.Models.Section", "Section")
                        .WithMany("Chapter")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK_Chapter_Section")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("training_stuff_api.Models.Lesson", b =>
                {
                    b.HasOne("training_stuff_api.Models.Chapter", "ChapterNavigation")
                        .WithMany("Lesson")
                        .HasForeignKey("Chapter")
                        .HasConstraintName("FK_Lesson_Chapter")
                        .IsRequired();

                    b.HasOne("training_stuff_api.Models.User", "EditedByNavigation")
                        .WithMany("Lesson")
                        .HasForeignKey("EditedBy")
                        .HasConstraintName("FK_Lesson_User");
                });

            modelBuilder.Entity("training_stuff_api.Models.User", b =>
                {
                    b.HasOne("training_stuff_api.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role");
                });
#pragma warning restore 612, 618
        }
    }
}
